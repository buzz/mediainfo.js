"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[924],{9340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=n(6070),s=n(5710);const o={sidebar_position:1,description:"Use a CDN or install via npm."},a="Installation",r={id:"getting-started/installation",title:"Installation",description:"Use a CDN or install via npm.",source:"@site/docs/getting-started/installation.md",sourceDirName:"getting-started",slug:"/getting-started/installation",permalink:"/docs/getting-started/installation",draft:!1,unlisted:!1,editUrl:"https://github.com/buzz/mediainfo.js/blob/gh-pages-src/docs/getting-started/installation.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Use a CDN or install via npm."},sidebar:"docsSidebar",previous:{title:"Getting Started",permalink:"/docs/category/getting-started"},next:{title:"Usage",permalink:"/docs/getting-started/usage"}},l={},d=[{value:"Bundler",id:"bundler",level:2},{value:"WASM file loading",id:"wasm-file-loading",level:3},{value:"CDN",id:"cdn",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.h2,{id:"bundler",children:"Bundler"}),"\n",(0,i.jsx)(t.p,{children:"Install mediainfo.js using a package manager of your choice."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"$ npm install mediainfo.js\n"})}),"\n",(0,i.jsx)(t.h3,{id:"wasm-file-loading",children:"WASM file loading"}),"\n",(0,i.jsxs)(t.p,{children:["When calling ",(0,i.jsx)(t.a,{href:"/api/function/mediaInfoFactory",children:(0,i.jsx)(t.code,{children:"mediaInfoFactory()"})}),", the WASM file is automatically\nloaded. By default, it is searched for in the parent directory relative to the script file, aligning\nwith the package distribution structure. This setup works out-of-the-box for the CDN version."]}),"\n",(0,i.jsx)(t.p,{children:"When using a bundler:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Ensure the file ",(0,i.jsx)(t.code,{children:"node_modules/mediainfo.js/dist/MediaInfoModule.wasm"})," is accessible by the web\nserver. The steps to achieve this depend on your framework and project setup. The simplest method\nis to copy the file to your ",(0,i.jsx)(t.code,{children:"static"})," files folder."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.a,{href:"/api/interface/MediaInfoFactoryOptions#locateFile",children:(0,i.jsx)(t.code,{children:"locateFile"})})," option allows you to adjust\nthe location from which the WASM file is loaded."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["Refer to the ",(0,i.jsx)(t.a,{href:"/docs/category/examples",children:"examples page"})," for instructions on using different\nframeworks."]})}),"\n",(0,i.jsx)(t.h2,{id:"cdn",children:"CDN"}),"\n",(0,i.jsxs)(t.p,{children:["For simple projects you might want to use the CDN version of mediainfo.js. Just add the ",(0,i.jsx)(t.code,{children:"script"})," tag\nto your website."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",children:'<script type="text/javascript" src="https://unpkg.com/mediainfo.js"><\/script>\n'})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Users of the CDN version do not need to manage WASM file loading, as it is preconfigured to load\nfrom the CDN server."})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5710:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(758);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);